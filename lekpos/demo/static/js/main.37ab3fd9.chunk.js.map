{"version":3,"sources":["constants/index.js","utils/HttpClient.js","actions/login.action.js","components/layouts/Header.js","components/layouts/Menu.js","components/pages/LoginPage/LoginPage.js","components/pages/RegisterPage/RegisterPage.js","actions/register.action.js","components/pages/ShopPage/styles.js","models/transaction.js","actions/shop.action.js","components/fragments/Payment/Payment.js","actions/stock.action.js","components/pages/ShopPage/ShopPage.js","components/fragments/StockCard/StockCard.js","components/pages/StockPage/StockPage.js","components/pages/StockCreatePage/StockCreatePage.js","components/pages/StockEditPage/StockEditPage.js","components/pages/ReportPage/ReportPage.js","components/pages/TransactionPage/TransactionPage.js","App.js","serviceWorker.js","reducers/login.reducer.js","reducers/register.reducer.js","reducers/stock.reducer.js","reducers/shop.reducer.js","reducers/transaction.reducer.js","reducers/index.js","index.js"],"names":["apiUrl","imageUrl","server","isAbsoluteURLRegex","axios","interceptors","request","use","a","config","test","url","join","userToken","localStorage","getItem","headers","timeout","response","error","console","log","JSON","stringify","undefined","status","refreshToken","refreshUrl","post","result","token","data","jwt","setItem","removeItem","isCancel","Promise","reject","alert","code","message","httpClient","isLoggedIn","decodedToken","decode","complete","dateNow","Date","exp","getTime","useStyles","makeStyles","theme","root","display","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","width","enteringScreen","menuButton","marginRight","hide","flexShrink","whiteSpace","drawerOpen","drawerClose","overflowX","spacing","breakpoints","up","toolbar","alignItems","justifyContent","padding","mixins","content","flexGrow","sectionDesktop","sectionMobile","grow","withRouter","props","classes","React","useState","anchorEl","setAnchorEl","dispatch","useDispatch","isMenuOpen","Boolean","handleMenuClose","menuId","renderMenu","Menu","anchorOrigin","vertical","horizontal","id","keepMounted","transformOrigin","open","onClose","MenuItem","onClick","history","type","push","className","AppBar","position","clsx","IconButton","color","aria-label","handleDrawerOpen","edge","Typography","variant","noWrap","process","Badge","badgeContent","aria-controls","aria-haspopup","event","currentTarget","bannerOpen","backgroundImage","backgroundColor","isActive","Drawer","paper","handleDrawerClose","src","height","style","alt","Divider","List","ListItem","component","NavLink","to","button","key","activeClassName","ListItemIcon","ListItemText","primary","maxWidth","marginTop","form","submit","margin","loginReducer","useSelector","Card","CardMedia","image","title","CardContent","gutterBottom","initialValues","username","password","onSubmit","values","value","setSubmitting","payload","handleChange","handleSubmit","isSubmitting","setFieldValue","noValidate","TextField","required","fullWidth","label","onChange","autoComplete","autoFocus","name","isError","Alert","severity","marginBottom","textAlign","CircularProgress","size","Button","disabled","RouterLink","Grid","container","justify","showForm","registerReducer","goBack","registerActions","star","orderList","flex","maxHeight","orderListItem","productContainer","paymentButton","leftLabel","rightLabel","TransactionRequest","subtotal","discount","shipping_cost","tax_percent","total","paid","change","order_list","payment_type","payment_detail","staff_id","seller_id","buyer_id","comment","doUpdateOrder","orderLines","totalPrice","item","price","qty","taxAmt","shopReducer","fontSize","field","updateChange","given","mTotalPrice","onClickGiven","newValue","oldValue","newGiven","onClickSubmit","trans","order","getState","then","mOrderLines","isPaymentMade","err","isMustChanged","InputLabelProps","shrink","InputProps","readOnly","startAdornment","InputAdornment","readonly","xs","onClickExact","setStateStockToSuccess","getProducts","doGetProducts","get","stockReducer","useEffect","stockActions","Paper","elevation","paddingTop","paddingBottom","mIsPaymentMade","Payment","Container","overflowY","map","index","indexOf","unshift","shopActions","CardActionArea","product_id","product","flexDirection","renderProductRows","mTaxAmt","displayType","decimalScale","thousandSeparator","prefix","fixedDecimalScale","mGiven","length","divider","alignitem","alignContent","align","foundIndex","splice","StockCard","minHeight","subtitle","minWidth","createElement","icon","setOpen","selectedRow","setSelectedRow","openDialog","setOpenDialog","selectedProduct","setSelectedProduct","columns","render","cellStyle","Math","random","borderRadius","stock","suffix","format","created","actions","iconProps","tooltip","rowData","handleDeleteConfirm","delete","handleClose","lg","md","AddShoppingCartIcon","NewReleasesIcon","AssignmentReturnIcon","StarIcon","Dialog","aria-labelledby","aria-describedby","DialogTitle","DialogContent","DialogContentText","DialogActions","onRowClick","evt","options","pageSize","rowStyle","tableData","components","Toolbar","Link","card","showPreviewImage","file_obj","validate","errors","formData","FormData","append","file","e","preventDefault","target","files","URL","createObjectURL","click-type","multiple","accept","CardActions","raised","match","params","parseInt","enableReinitialize","put","chartType","setChartType","chartData","setChartData","getRandomInt","randoms","floor","labels","datasets","fill","lineTension","borderColor","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","pointBorderColor","pointBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointRadius","pointHitRadius","chartOption","maintainAspectRatio","scales","yAxes","ticks","beginAtZero","callback","toString","replace","ButtonGroup","TransactionPage","window","location","hostname","initialState","isFetching","combineReducers","state","transactionReducer","middlewares","applyMiddleware","thunk","logger","store","createStore","reducers","ReactDOM","setDrawerOpen","createMuiTheme","palette","500","danger","SecuredRoute","Component","rest","loginActions","basename","ThemeProvider","LoginPage","path","RegisterPage","ShopPage","exact","StockPage","StockCreatePage","StockEditPage","ReportPage","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"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","file":"static/js/main.37ab3fd9.chunk.js","sourcesContent":["export const LOGIN_FETCHING = 'LOGIN_FETCHING';\nexport const LOGIN_FAILED = 'LOGIN_FAILED';\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\n\n\nexport const LOGOUT = \"LOGOUT\";\n\n// Register Page\nexport const REGISTER_FETCHING = \"REGISTER_FETCHING\";\nexport const REGISTER_SUCCESS = \"REGISTER_SUCCESS\";\nexport const REGISTER_FAILED = \"REGISTER_FAILED\";\n\n// Stock Page\nexport const STOCK_FETCHING = \"STOCK_FETCHING\";\nexport const STOCK_SUCCESS = \"STOCK_SUCCESS\";\nexport const STOCK_FAILED = \"STOCK_FAILED\";\nexport const STOCK_CLEAR = \"STOCK_CLEAR\";\n\n// Stock Edit Page\nexport const STOCK_EDIT_FETCHING = \"STOCK_EDIT_FETCHING\";\nexport const STOCK_EDIT_SUCCESS = \"STOCK_EDIT_SUCCESS\";\nexport const STOCK_EDIT_FAILED = \"STOCK_EDIT_FAILED\";\nexport const STOCK_EDIT_INITIALED = \"STOCK_EDIT_INITIALED\";\n\n// Transaction Edit Page\nexport const TRANSACTION_FETCHING = \"TRANSACTION_FETCHING\";\nexport const TRANSACTION_SUCCESS = \"TRANSACTION_SUCCESS\";\nexport const TRANSACTION_FAILED = \"TRANSACTION_FAILED\";\n\n// Shop Page\nexport const SHOP_FETCHING = \"SHOP_FETCHING\";\nexport const SHOP_SUCCESS = \"SHOP_SUCCESS\";\nexport const SHOP_FAILED = \"SHOP_FAILED\";\n\nexport const SHOP_UPDATE_ORDER = \"SHOP_UPDATE_ORDER\";\nexport const SHOP_UPDATE_PAYMENT = \"SHOP_UPDATE_PAYMENT\";\n\n// Error Code\nexport const E_PICKER_CANCELLED = \"E_PICKER_CANCELLED\";\nexport const E_PICKER_CANNOT_RUN_CAMERA_ON_SIMULATOR =\n  \"E_PICKER_CANNOT_RUN_CAMERA_ON_SIMULATOR\";\nexport const E_PERMISSION_MISSING = \"E_PERMISSION_MISSING\";\nexport const E_PICKER_NO_CAMERA_PERMISSION = \"E_PICKER_NO_CAMERA_PERMISSION\";\nexport const E_USER_CANCELLED = \"E_USER_CANCELLED\";\nexport const E_UNKNOWN = \"E_UNKNOWN\";\nexport const E_DEVELOPER_ERROR = \"E_DEVELOPER_ERROR\";\nexport const TIMEOUT_NETWORK = \"ECONNABORTED\"; // request service timeout\nexport const NOT_CONNECT_NETWORK = \"NOT_CONNECT_NETWORK\";\n\n//////////////// Localization Begin ////////////////\nexport const NETWORK_CONNECTION_MESSAGE =\n  \"Cannot connect to server, Please try again.\";\nexport const NETWORK_TIMEOUT_MESSAGE =\n  \"A network timeout has occurred, Please try again.\";\nexport const UPLOAD_PHOTO_FAIL_MESSAGE =\n  \"An error has occurred. The photo was unable to upload.\";\n\nexport const apiUrl = \"http://localhost:8081/api/v2\";\nexport const imageUrl = \"http://localhost:8081\";\n\nexport const server = {\n  LOGIN_URL: `login`,\n  REFRESH_TOKEN_URL: `refresh/token`,\n  REGISTER_URL: `register`,\n  PRODUCT_URL: `product`,\n  TRANSACTION_URL: `transaction`,\n  REPORT_URL: `report`,\n  TOKEN_KEY: `token`,\n  REFRESH_TOKEN_KEY: `refresh_token`\n};\n","import axios from \"axios\";\nimport join from \"url-join\";\nimport {\n  server,\n  apiUrl,\n  NOT_CONNECT_NETWORK,\n  NETWORK_CONNECTION_MESSAGE\n} from \"../constants\";\n\nconst isAbsoluteURLRegex = /^(?:\\w+:)\\/\\//;\n\naxios.interceptors.request.use(async config => {\n  if (!isAbsoluteURLRegex.test(config.url)) {\n    config.url = join(apiUrl, config.url);\n  }\n\n  const userToken = localStorage.getItem(server.TOKEN_KEY);\n  if (userToken) {\n    config.headers = { \"x-access-token\": userToken };\n  }\n  config.timeout = 10000; // 10 Second\n  return config;\n});\n\naxios.interceptors.response.use(\n  response => {\n    return response;\n  },\n  async error => {\n    debugger;\n    console.log(JSON.stringify(error, undefined, 2));\n    if (error.response.status == \"401\") {\n      const refreshToken = localStorage.getItem(server.REFRESH_TOKEN_KEY);\n      const refreshUrl = `${apiUrl}/${server.REFRESH_TOKEN_URL}`;\n      let result = await axios.post(refreshUrl, { refreshToken });\n\n      const token = result.data.jwt;\n      localStorage.setItem(server.TOKEN_KEY, token);\n      debugger;\n      return axios.request(error.config);\n    } else if (error.response.status == \"403\") {\n      // force logout\n      localStorage.removeItem(server.TOKEN_KEY);\n      localStorage.removeItem(server.REFRESH_TOKEN_KEY);\n    }\n\n    if (axios.isCancel(error)) {\n      return Promise.reject(error);\n    } else if (!error.response) {\n      alert(JSON.stringify(error));\n      return Promise.reject({\n        code: NOT_CONNECT_NETWORK,\n        message: NETWORK_CONNECTION_MESSAGE\n      });\n    }\n    return Promise.reject(error);\n  }\n);\n\nexport const httpClient = axios;\n","import {\n  LOGIN_FETCHING,\n  LOGIN_FAILED,\n  LOGIN_SUCCESS,\n  LOGOUT,\n  server\n} from \"../constants\";\nimport { httpClient } from \"./../utils/HttpClient\";\nimport jwt from \"jsonwebtoken\";\n\nexport const setLoginStateToFetching = () => ({\n  type: LOGIN_FETCHING\n});\n\nexport const setLoginStateToFailed = () => ({\n  type: LOGIN_FAILED\n});\n\nexport const setLoginStateToSuccess = payload => ({\n  type: LOGIN_SUCCESS,\n  payload\n});\n\nexport const setLoginStateToLogout = () => ({\n  type: LOGOUT\n});\n\nexport const logout = history => {\n  return dispatch => {\n    localStorage.removeItem(server.TOKEN_KEY);\n    localStorage.removeItem(server.REFRESH_TOKEN_KEY);\n    dispatch(setLoginStateToLogout());\n    history.push(\"/login\");\n  };\n};\n\n// Called by Login Component\nexport const login = (value, history) => {\n  return async dispatch => {\n    try {\n      dispatch(setLoginStateToFetching()); // fetching\n      let result = await httpClient.post(server.LOGIN_URL, value);\n      if (result.data.result === \"ok\") {\n        const { token, refreshToken } = result.data;\n        localStorage.setItem(server.TOKEN_KEY, token);\n        localStorage.setItem(server.REFRESH_TOKEN_KEY, refreshToken);\n        dispatch(setLoginStateToSuccess(result));\n        history.push(\"/stock\");\n      } else {\n        dispatch(setLoginStateToFailed(result));\n      }\n    } catch (error) {\n      dispatch(setLoginStateToFailed({ data: { message: error } }));\n    }\n  };\n};\n\nexport const isLoggedIn = () => {\n  let token = localStorage.getItem(server.TOKEN_KEY);\n  if (token) {\n    var decodedToken = jwt.decode(token, { complete: true });\n    var dateNow = new Date();\n\n    if (decodedToken.exp < dateNow.getTime()) {\n      return false;\n    } else {\n      return true;\n    }\n  } else {\n    return false;\n  }\n};\n","import React from \"react\";\nimport clsx from \"clsx\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport * as loginActions from \"./../../actions/login.action\";\nimport Badge from \"@material-ui/core/Badge\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Menu from \"@material-ui/core/Menu\";\nimport AccountCircle from \"@material-ui/icons/AccountCircle\";\nimport NotificationsIcon from \"@material-ui/icons/Notifications\";\nimport MailIcon from \"@material-ui/icons/Mail\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport { useDispatch } from \"react-redux\";\n\nimport { withRouter } from \"react-router-dom\";\n\nconst drawerWidth = 240;\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: \"flex\"\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create([\"width\", \"margin\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    })\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create([\"width\", \"margin\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen\n    })\n  },\n  menuButton: {\n    marginRight: 36\n  },\n  hide: {\n    display: \"none\"\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n    whiteSpace: \"nowrap\"\n  },\n  drawerOpen: {\n    width: drawerWidth,\n    transition: theme.transitions.create(\"width\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen\n    })\n  },\n  drawerClose: {\n    transition: theme.transitions.create(\"width\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    }),\n    overflowX: \"hidden\",\n    width: theme.spacing(7) + 1,\n    [theme.breakpoints.up(\"sm\")]: {\n      width: theme.spacing(9) + 1\n    }\n  },\n  toolbar: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"flex-end\",\n    padding: theme.spacing(0, 1),\n    ...theme.mixins.toolbar\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3)\n  },\n  sectionDesktop: {\n    display: \"none\",\n    [theme.breakpoints.up(\"md\")]: {\n      display: \"flex\"\n    }\n  },\n  sectionMobile: {\n    display: \"flex\",\n    [theme.breakpoints.up(\"md\")]: {\n      display: \"none\"\n    }\n  },\n  grow: {\n    flexGrow: 1\n  }\n}));\n\nconst Header = props => {\n  const classes = useStyles();\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const dispatch = useDispatch();\n  const isMenuOpen = Boolean(anchorEl);\n  const handleMenuClose = () => {\n    setAnchorEl(null);\n  };\n\n  const logout = () => {\n    dispatch(loginActions.logout(props.history));\n    handleMenuClose();\n  };\n\n  const menuId = \"primary-search-account-menu\";\n  const renderMenu = (\n    <Menu\n      anchorEl={anchorEl}\n      anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\n      id={menuId}\n      keepMounted\n      transformOrigin={{ vertical: \"top\", horizontal: \"right\" }}\n      open={isMenuOpen}\n      onClose={handleMenuClose}\n    >\n      <MenuItem onClick={handleMenuClose}>Profile</MenuItem>\n      <MenuItem onClick={logout}>Logout</MenuItem>\n    </Menu>\n  );\n\n  return (\n    <div className={classes.root}>\n      <AppBar\n        position=\"fixed\"\n        className={clsx(classes.appBar, {\n          [classes.appBarShift]: props.open\n        })}\n      >\n        <Toolbar>\n          <IconButton\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            onClick={props.handleDrawerOpen}\n            edge=\"start\"\n            className={clsx(classes.menuButton, {\n              [classes.hide]: props.open && classes.hide\n            })}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography variant=\"h6\" noWrap>\n            React / NodeJS / Express / MongoDB Workshop Ver.{\" \"}\n            {process.env.REACT_APP_VERSION}\n            <Typography variant=\"body1\"> By CodeMobiles </Typography>\n          </Typography>\n\n          <div className={classes.grow} />\n\n          <div className={classes.sectionDesktop}>\n            <IconButton aria-label=\"show 4 new mails\" color=\"inherit\">\n              <Badge badgeContent={4} color=\"secondary\">\n                <MailIcon />\n              </Badge>\n            </IconButton>\n            <IconButton aria-label=\"show 17 new notifications\" color=\"inherit\">\n              <Badge badgeContent={17} color=\"secondary\">\n                <NotificationsIcon />\n              </Badge>\n            </IconButton>\n            <IconButton\n              edge=\"end\"\n              aria-label=\"account of current user\"\n              aria-controls={menuId}\n              aria-haspopup=\"true\"\n              color=\"inherit\"\n              onClick={event => setAnchorEl(event.currentTarget)}\n            >\n              <AccountCircle />\n            </IconButton>\n          </div>\n        </Toolbar>\n      </AppBar>\n      {renderMenu}\n    </div>\n  );\n};\n\nexport default withRouter(Header);\n","import React from \"react\";\nimport clsx from \"clsx\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport List from \"@material-ui/core/List\";\nimport Divider from \"@material-ui/core/Divider\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ShopIcon from \"@material-ui/icons/Shop\";\nimport LayersIcon from \"@material-ui/icons/Layers\";\nimport BarChartIcon from \"@material-ui/icons/BarChart\";\nimport AttachMoneyIcon from \"@material-ui/icons/AttachMoney\";\nimport { NavLink } from \"react-router-dom\";\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles(theme => ({\n  drawerOpen: {\n    width: drawerWidth,\n    transition: theme.transitions.create(\"width\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen\n    })\n  },\n  drawerClose: {\n    transition: theme.transitions.create(\"width\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    }),\n    overflowX: \"hidden\",\n    width: theme.spacing(7)\n  },\n  bannerOpen: {\n    backgroundImage: \"url(\" + \"/images/background_menu.jpg\" + \")\"\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n    whiteSpace: \"nowrap\"\n  },\n  toolbar: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"flex-end\",\n    backgroundColor: \"#1E88E5\",\n    padding: theme.spacing(0, 1),\n    ...theme.mixins.toolbar\n  },\n  isActive: {\n    backgroundColor: \"#e0f5fd\",\n    color: \"#0080ff\"\n  }\n}));\n\nexport default props => {\n  const classes = useStyles();\n\n  return (\n    <Drawer\n      variant=\"permanent\"\n      className={clsx({\n        [classes.drawerOpen]: props.open,\n        [classes.drawerClose]: !props.open\n      })}\n      classes={{\n        paper: clsx({\n          [classes.drawerOpen]: props.open,\n          [classes.bannerOpen]: props.open,\n          [classes.drawerClose]: !props.open\n        })\n      }}\n    >\n      <div className={classes.toolbar}>\n        <IconButton onClick={props.handleDrawerClose}>\n          <img src=\"/images/logo_white.png\" height=\"30\" />\n          <ChevronLeftIcon style={{ color: \"white\" }} />\n        </IconButton>\n      </div>\n      {props.open && <img height={250} src=\"/images/menu_banner.jpg\" alt=\"\" />}\n      <Divider />\n\n      <List>\n        {/* Shop */}\n        <ListItem\n          component={NavLink}\n          to=\"/shop\"\n          button\n          key=\"shop\"\n          activeClassName={classes.isActive}\n        >\n          <ListItemIcon>\n            <ShopIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Shop\" />\n        </ListItem>\n\n        {/* Stock */}\n        <ListItem\n          component={NavLink}\n          to=\"/stock\"\n          button\n          key=\"stock\"\n          activeClassName={classes.isActive}\n        >\n          <ListItemIcon>\n            <LayersIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Stock\" />\n        </ListItem>\n\n        {/* Report */}\n        <ListItem\n          component={NavLink}\n          to=\"/report\"\n          button\n          key=\"report\"\n          activeClassName={classes.isActive}\n        >\n          <ListItemIcon>\n            <BarChartIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Report\" />\n        </ListItem>\n\n        {/* Transaction */}\n        <ListItem\n          component={NavLink}\n          to=\"/transaction\"\n          button\n          key=\"transaction\"\n          activeClassName={classes.isActive}\n        >\n          <ListItemIcon>\n            <AttachMoneyIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Transaction\" />\n        </ListItem>\n      </List>\n    </Drawer>\n  );\n};\n","import React, { useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Link from \"@material-ui/core/Link\";\nimport { Link as RouterLink } from \"react-router-dom\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { Formik } from \"formik\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport * as loginActions from \"./../../../actions/login.action\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport Alert from \"@material-ui/lab/Alert\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    maxWidth: 345,\n    marginTop: 80\n  },\n  form: {\n    width: \"100%\", // Fix IE 11 issue.\n    marginTop: theme.spacing(1)\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2)\n  }\n}));\n\nexport default props => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const loginReducer = useSelector(({ loginReducer }) => loginReducer);\n\n  const showForm = ({\n    values,\n    handleChange,\n    handleSubmit,\n    setFieldValue,\n    isSubmitting\n  }) => {\n    return (\n      <form className={classes.form} noValidate onSubmit={handleSubmit}>\n        <TextField\n          variant=\"outlined\"\n          margin=\"normal\"\n          required\n          fullWidth\n          id=\"username\"\n          label=\"Username\"\n          onChange={handleChange}\n          value={values.username}\n          autoComplete=\"email\"\n          autoFocus\n        />\n        <TextField\n          variant=\"outlined\"\n          margin=\"normal\"\n          required\n          fullWidth\n          onChange={handleChange}\n          value={values.password}\n          name=\"password\"\n          label=\"Password\"\n          type=\"password\"\n          id=\"password\"\n          autoComplete=\"current-password\"\n        />\n\n        {loginReducer.isError && (\n          <Alert severity=\"error\" style={{ marginBottom: 8 }}>\n            Invalid username or password!\n          </Alert>\n        )}\n\n        <div style={{ textAlign: \"center\" }}>\n          {/* Ternery condition */}\n          {isSubmitting && (\n            <CircularProgress size={30} style={{ color: \"#F0F\" }} />\n          )}\n        </div>\n\n        <Button\n          type=\"submit\"\n          fullWidth\n          variant=\"contained\"\n          color=\"primary\"\n          disabled={isSubmitting}\n          className={classes.submit}\n        >\n          Sign In\n        </Button>\n\n        <Button\n          type=\"button\"\n          fullWidth\n          variant=\"text\"\n          component={RouterLink}\n          to=\"/register\"\n        >\n          Register\n        </Button>\n\n        <Grid container justify=\"flex-end\"></Grid>\n      </form>\n    );\n  };\n\n  return (\n    <Card className={classes.root}>\n      <CardMedia\n        component=\"img\"\n        alt=\"Contemplative Reptile\"\n        height=\"200\"\n        image={`${process.env.PUBLIC_URL}/images/authen_header.jpg`}\n        title=\"Contemplative Reptile\"\n      />\n      <CardContent>\n        <Typography gutterBottom variant=\"h5\" component=\"h2\">\n          Login\n        </Typography>\n        <Formik\n          initialValues={{ username: \"\", password: \"\" }}\n          onSubmit={(values, { setSubmitting }) => {\n            setSubmitting(false);\n            dispatch(loginActions.login(values, props.history));\n          }}\n        >\n          {props => showForm(props)}\n        </Formik>\n      </CardContent>\n    </Card>\n  );\n};\n","import React, { useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Link from \"@material-ui/core/Link\";\nimport { Link as RouterLink, NavLink } from \"react-router-dom\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { Formik } from \"formik\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport axios from \"axios\";\nimport * as registerActions from \"./../../../actions/register.action\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    maxWidth: 345,\n    marginTop: 80\n  },\n  form: {\n    width: \"100%\", // Fix IE 11 issue.\n    marginTop: theme.spacing(1)\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2)\n  }\n}));\n\nexport default props => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const registerReducer = useSelector(({ registerReducer }) => registerReducer);\n\n  const showForm = ({\n    values,\n    handleChange,\n    handleSubmit,\n    setFieldValue,\n    isSubmitting\n  }) => {\n    return (\n      <form className={classes.form} noValidate onSubmit={handleSubmit}>\n        <TextField\n          variant=\"outlined\"\n          margin=\"normal\"\n          required\n          fullWidth\n          id=\"username\"\n          label=\"Username\"\n          onChange={handleChange}\n          value={values.username}\n          autoComplete=\"email\"\n          autoFocus\n        />\n        <TextField\n          variant=\"outlined\"\n          margin=\"normal\"\n          required\n          fullWidth\n          onChange={handleChange}\n          value={values.password}\n          name=\"password\"\n          label=\"Password\"\n          type=\"password\"\n          id=\"password\"\n          autoComplete=\"current-password\"\n        />\n\n        {registerReducer.isError && (\n          <Alert severity=\"error\" style={{ marginBottom: 8 }}>\n            Invalid account!\n          </Alert>\n        )}\n\n        <div style={{ textAlign: \"center\" }}>\n          {/* Ternery condition */}\n          {isSubmitting && (\n            <CircularProgress size={30} style={{ color: \"#F0F\" }} />\n          )}\n\n          {registerReducer.result && JSON.stringify(registerReducer.result)}\n        </div>\n\n        <Button\n          type=\"submit\"\n          fullWidth\n          variant=\"contained\"\n          color=\"primary\"\n          disabled={isSubmitting}\n          className={classes.submit}\n        >\n          Register\n        </Button>\n\n        <Button\n          type=\"button\"\n          fullWidth\n          variant=\"text\"\n          onClick={() => props.history.goBack()}\n        >\n          Cancel\n        </Button>\n\n        <Grid container justify=\"flex-end\"></Grid>\n      </form>\n    );\n  };\n\n  return (\n    <Card className={classes.root}>\n      <CardMedia\n        component=\"img\"\n        alt=\"Contemplative Reptile\"\n        height=\"200\"\n        image={`${process.env.PUBLIC_URL}/images/authen_header.jpg`}\n        title=\"Contemplative Reptile\"\n      />\n      <CardContent>\n        <Typography gutterBottom variant=\"h5\" component=\"h2\">\n          Register\n        </Typography>\n        <Formik\n          initialValues={{ username: \"\", password: \"\" }}\n          onSubmit={(values, { setSubmitting }) => {\n            setSubmitting(false)\n            dispatch(registerActions.register(values, props.history));\n          }}\n        >\n          {props => showForm(props)}\n        </Formik>\n      </CardContent>\n    </Card>\n  );\n};\n","import {\n  REGISTER_FETCHING,\n  REGISTER_FAILED,\n  REGISTER_SUCCESS,\n  server\n} from \"../constants\";\n\nimport {httpClient} from \"./../utils/HttpClient\";\n\nexport const setRegisterStateToFetching = () => ({\n  type: REGISTER_FETCHING\n});\n\nexport const setRegisterStateToFailed = () => ({\n  type: REGISTER_FAILED\n});\n\nexport const setRegisterStateToSuccess = payload => ({\n  type: REGISTER_SUCCESS,\n  payload\n});\n\nexport const register = (values, history) => {\n  return async dispatch => {\n    dispatch(setRegisterStateToFetching());\n    const response = await httpClient.post(server.REGISTER_URL, values);\n    if (response.data.result == \"ok\") {\n      dispatch(setRegisterStateToSuccess(response.data));\n      history.push(\"/login\");\n    } else {\n      dispatch(setRegisterStateToFailed());\n    }\n  };\n};\n","import { makeStyles } from \"@material-ui/core/styles\";\n\nexport default makeStyles(theme => ({\n  root: {\n    width: \"100%\",\n    marginTop: 55\n  },\n  star: {\n    color: \"red\"\n  },\n  orderList: {\n    overflowX: \"hidden\",\n    height: 490,\n    flex: 1,\n    width: \"100%\",\n    maxHeight: 490\n  },\n  orderListItem: {\n    height: 100,\n    maxHeight: 100\n  },\n  productContainer: {\n    height: 720\n  },\n  paymentButton: {\n    height: 95,\n    marginTop: 24\n  },\n  leftLabel: {\n    marginLeft: 20\n  },\n  rightLabel: {\n    marginRight: 20\n  }\n}));\n","export class TransactionRequest {\n    subtotal = 0;\n    discount = 0;\n    shipping_cost = 0;\n    tax_percent = 0;\n    total = 0;\n    paid = 0;\n    change = 0;\n    order_list = \"x\";\n    payment_type = \"x\";\n    payment_detail = \"x\";\n    staff_id = \"x\";\n    seller_id = \"x\";\n    buyer_id = \"x\";\n    comment = \"x\";\n}","import { httpClient } from \"./../utils/HttpClient\";\n\nimport { SHOP_UPDATE_ORDER, SHOP_UPDATE_PAYMENT, server } from \"../constants\";\n\nconst setStateShoptoUpdateOrder = payload => ({\n  type: SHOP_UPDATE_ORDER,\n  payload: payload\n});\n\nconst doUpdateOrder = (dispatch, orderLines) => {\n  debugger;\n  let totalPrice = 0;\n  let taxAmt = 0;\n  for (let item of orderLines) {\n    totalPrice += item.price * item.qty;\n  }\n  taxAmt = totalPrice * 0.07;\n\n  dispatch(\n    setStateShoptoUpdateOrder({\n      orderLines,\n      totalPrice,\n      taxAmt\n    })\n  );\n};\n\nexport const addOrder = item => {\n  return (dispatch, getState) => {\n    let orderLines = getState().shopReducer.mOrderLines;\n    let index = orderLines.indexOf(item);\n    if (index === -1) {\n      item.qty = 1;\n      orderLines.unshift(item);\n    } else {\n      orderLines[index].qty++;\n    }\n\n    doUpdateOrder(dispatch, orderLines);\n  };\n};\n\nexport const removeOrder = product => {\n  return (dispatch, getState) => {\n    let orderLines = getState().shopReducer.mOrderLines;\n    var foundIndex = orderLines.indexOf(product);\n\n    orderLines.map(item => {\n      if (item.product_id === product.product_id) {\n        item.qty = 1;\n      }\n    });\n    orderLines.splice(foundIndex, 1);\n\n    doUpdateOrder(dispatch, orderLines);\n  };\n};\n\nexport const submitPayment = data => {\n  return (dispatch, getState) => {\n    httpClient.post(server.TRANSACTION_URL, data).then(() => {\n      // Clear payment\n      getState().shopReducer.mOrderLines = [];\n      dispatch({\n        type: SHOP_UPDATE_PAYMENT,\n        payload: {\n          isPaymentMade: false,\n          given: 0\n        }\n      });\n    });\n  };\n};\n\nexport const togglePaymentState = () => {\n  return (dispatch, getState) => {\n    dispatch({\n      type: SHOP_UPDATE_PAYMENT,\n      payload: {\n        isPaymentMade: !getState().shopReducer.mIsPaymentMade,\n        given: !getState().shopReducer.mGiven\n      }\n    });\n  };\n};\n","import React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { TransactionRequest } from \"./../../../models/transaction\";\nimport * as shopActions from \"./../../../actions/shop.action\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Formik, Form, Field } from \"formik\";\nimport { TextField } from \"formik-material-ui\";\nimport Grid from \"@material-ui/core/Grid\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport Button from \"@material-ui/core/Button\";\n\nexport default props => {\n  const shopReducer = useSelector(({ shopReducer }) => shopReducer);\n  const dispatch = useDispatch();\n\n  const useStyles = makeStyles(theme => ({\n    root: {\n      padding: 30\n    },\n    button: {\n      height: 100,\n      fontSize: 20\n    },\n    field: {\n      marginTop: 16\n    }\n  }));\n\n  const classes = useStyles();\n\n  const isMustChanged = values => {\n    try {\n      return values.given > shopReducer.mTotalPrice;\n    } catch (err) {\n      return false;\n    }\n  };\n\n  const updateChange = (given, setFieldValue) => {\n    let change = given - shopReducer.mTotalPrice;\n    if (change > 0) {\n      setFieldValue(\"change\", change);\n    } else {\n      setFieldValue(\"change\", 0);\n    }\n  };\n\n  const onClickGiven = (newValue, oldValue, setFieldValue) => {\n    const newGiven = newValue + oldValue;\n    setFieldValue(\"given\", newGiven);\n    updateChange(newGiven, setFieldValue);\n  };\n\n  const onClickExact = setFieldValue => {\n    setFieldValue(\"given\", shopReducer.mTotalPrice);\n    updateChange(0, setFieldValue);\n  };\n\n  const onClickSubmit = values => {\n    let trans = new TransactionRequest();\n    trans.total = shopReducer.mTotalPrice;\n    trans.paid = values.given;\n    trans.change = values.change;\n    trans.payment_type = \"cash\";\n    trans.payment_detail = \"full\";\n    trans.seller_id = \"sr0001\";\n    trans.buyer_id = \"by0000\";\n    trans.order_list = props.order;\n    dispatch(shopActions.submitPayment(trans));\n  };\n\n  const showForm = ({ values, setFieldValue }) => {\n    return (\n      <Form>\n        {isMustChanged(values) && (\n          <Field\n            variant=\"outlined\"\n            className={classes.field}\n            fullWidth\n            InputLabelProps={{\n              shrink: true\n            }}\n            component={TextField}\n            name=\"change\"\n            type=\"text\"\n            label=\"Change\"\n            InputProps={{\n              style: { fontSize: 35 },\n              readOnly: true,\n              startAdornment: (\n                <InputAdornment position=\"start\">THB</InputAdornment>\n              )\n            }}\n          />\n        )}\n\n        <Field\n          readonly\n          variant=\"outlined\"\n          className={classes.field}\n          fullWidth\n          component={TextField}\n          name=\"given\"\n          type=\"text\"\n          label=\"Given\"\n          InputProps={{\n            style: { fontSize: 35, color: \"green\" },\n            readOnly: true,\n            startAdornment: (\n              <InputAdornment position=\"start\">THB</InputAdornment>\n            )\n          }}\n        />\n\n        <div style={{ marginTop: 32 }}>\n          <Grid container justify=\"space-between\" spacing={2}>\n            <Grid item xs>\n              <Button\n                className={classes.button}\n                fullWidth\n                variant=\"contained\"\n                color=\"primary\"\n                onClick={() => onClickGiven(1000, values.given, setFieldValue)}\n              >\n                ฿1,000\n              </Button>\n            </Grid>\n            <Grid item xs>\n              <Button\n                className={classes.button}\n                fullWidth\n                variant=\"contained\"\n                color=\"primary\"\n                onClick={() => onClickGiven(500, values.given, setFieldValue)}\n              >\n                ฿500\n              </Button>\n            </Grid>\n            <Grid item xs>\n              <Button\n                className={classes.button}\n                fullWidth\n                variant=\"contained\"\n                color=\"primary\"\n                onClick={() => onClickGiven(100, values.given, setFieldValue)}\n              >\n                ฿100\n              </Button>\n            </Grid>\n          </Grid>\n          <Grid container justify=\"space-between\" spacing={2}>\n            <Grid item xs>\n              <Button\n                className={classes.button}\n                fullWidth\n                variant=\"contained\"\n                color=\"primary\"\n                onClick={() => onClickGiven(50, values.given, setFieldValue)}\n              >\n                ฿50\n              </Button>\n            </Grid>\n            <Grid item xs>\n              <Button\n                className={classes.button}\n                fullWidth\n                variant=\"contained\"\n                color=\"primary\"\n                onClick={() => onClickGiven(20, values.given, setFieldValue)}\n              >\n                ฿20\n              </Button>\n            </Grid>\n            <Grid item xs>\n              <Button\n                className={classes.button}\n                fullWidth\n                variant=\"contained\"\n                color=\"primary\"\n                onClick={() => onClickGiven(10, values.given, setFieldValue)}\n              >\n                ฿10\n              </Button>\n            </Grid>\n          </Grid>\n          <Grid container justify=\"space-between\" spacing={2}>\n            <Grid item xs>\n              <Button\n                className={classes.button}\n                fullWidth\n                variant=\"contained\"\n                color=\"danger\"\n                onClick={() => setFieldValue(\"given\", 0)}\n              >\n                CLR\n              </Button>\n            </Grid>\n            <Grid item xs>\n              <Button\n                className={classes.button}\n                fullWidth\n                variant=\"contained\"\n                color=\"primary\"\n                onClick={() => onClickExact(setFieldValue)}\n              >\n                EXACT\n              </Button>\n            </Grid>\n            <Grid item xs>\n              <Button\n                className={classes.button}\n                fullWidth\n                variant=\"outlined\"\n                color=\"primary\"\n                onClick={() => onClickSubmit(values)}\n              >\n                Submit\n              </Button>\n            </Grid>\n          </Grid>\n        </div>\n      </Form>\n    );\n  };\n\n  return (\n    <div className={classes.root}>\n      <Formik initialValues={{ given: 0 }}>{props => showForm(props)}</Formik>\n    </div>\n  );\n};\n","import { httpClient } from \"./../utils/HttpClient\";\nimport {\n  STOCK_SUCCESS,\n  STOCK_FETCHING,\n  STOCK_FAILED,\n  server,\n  STOCK_CLEAR\n} from \"../constants\";\n\nexport const setStateStockToSuccess = payload => ({\n  type: STOCK_SUCCESS,\n  payload\n});\n\nconst setStateStockToFetching = () => ({\n  type: STOCK_FETCHING\n});\n\nconst setStateStockToFailed = () => ({\n  type: STOCK_FAILED\n});\n\nconst setStateStockToClear = () => ({\n  type: STOCK_CLEAR\n});\n\nexport const clearProduct = () => {\n  return dispatch => {\n    dispatch(setStateStockToClear());\n  };\n};\n\nexport const getProducts = () => {\n  return dispatch => {\n    dispatch(setStateStockToFetching());\n    doGetProducts(dispatch);\n  };\n};\n\nexport const addProduct = (formData, history) => {\n  return async dispatch => {\n    await httpClient.post(server.PRODUCT_URL, formData);\n    history.goBack();\n  };\n};\n\nexport const updateProduct = (formData, history) => {\n  return async dispatch => {\n    await httpClient.put(server.PRODUCT_URL, formData);\n    history.goBack();\n  };\n};\n\nexport const getProductById = id => {\n  return async dispatch => {\n    try {\n      dispatch(setStateStockToFetching());\n      let result = await httpClient.get(`${server.PRODUCT_URL}/id/${id}`);\n      dispatch(setStateStockToSuccess(result.data));\n    } catch (error) {\n      alert(JSON.stringify(error));\n      dispatch(setStateStockToFailed());\n    }\n  };\n};\n\nexport const deleteProduct = id => {\n  return async dispatch => {\n    dispatch(setStateStockToFetching());\n    await httpClient.delete(`${server.PRODUCT_URL}/id/${id}`);\n    await doGetProducts(dispatch);\n  };\n};\n\nexport const getProductByKeyword = event => {\n  return async dispatch => {\n    var keyword = event.target.value;\n    dispatch(setStateStockToFetching());\n\n    if (keyword !== null && keyword !== \"\") {\n      let result = await httpClient.get(\n        `${server.PRODUCT_URL}/name/${keyword}`\n      );\n      dispatch(setStateStockToSuccess(result.data));\n    } else {\n      doGetProducts(dispatch);\n    }\n  };\n};\n\nconst doGetProducts = async dispatch => {\n  try {\n    let result = await httpClient.get(server.PRODUCT_URL);\n    dispatch(setStateStockToSuccess(result.data));\n  } catch (err) {\n    // alert(JSON.stringify(err));\n    dispatch(setStateStockToFailed());\n  }\n};\n","import React, { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport useStyles from \"./styles\";\nimport Payment from \"./../../fragments/Payment/Payment\";\nimport * as stockActions from \"./../../../actions/stock.action\";\nimport * as shopActions from \"./../../../actions/shop.action\";\nimport { imageUrl } from \"./../../../constants\";\nimport NumberFormat from \"react-number-format\";\nimport Container from \"@material-ui/core/Container\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Card from \"@material-ui/core/Card\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Typography from \"@material-ui/core/Typography\";\nimport StarsIcon from \"@material-ui/icons/Stars\";\nimport DeleteOutlineIcon from \"@material-ui/icons/DeleteOutline\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Button from \"@material-ui/core/Button\";\n\nexport default props => {\n  const shopReducer = useSelector(({ shopReducer }) => shopReducer);\n  const stockReducer = useSelector(({ stockReducer }) => stockReducer);\n  const dispatch = useDispatch();\n  const classes = useStyles();\n\n  const renderPayment = () => {\n    return (\n      <div className=\"col-md-8\" style={{ maxHeight: 710 }}>\n        <Payment order={JSON.stringify(shopReducer.mOrderLines)} />\n      </div>\n    );\n  };\n\n  const isSelectedItem = product => {\n    let index = shopReducer.mOrderLines.indexOf(product);\n    return index !== -1;\n  };\n\n  const renderOrderRows = () => {\n    const { mOrderLines } = shopReducer;\n\n    return mOrderLines.map(item => (\n      <ListItem button divider className={classes.orderListItem}>\n        <Grid container key={item.product_id} spacing={1}>\n          {/* Image Order  */}\n          <Grid item xs={2}>\n            <img\n              alt=\"to be done\"\n              src={`${imageUrl}/images/${item.image}`}\n              style={{ height: 90, width: 90 }}\n            />\n          </Grid>\n          {/* Name Order  */}\n          <Grid item xs={8} alignitem=\"center\">\n            <Typography\n              color=\"textSecondary\"\n              component=\"p\"\n              style={{ maxHeight: 50, marginLeft: 32 }}\n            >\n              {item.name}\n            </Typography>\n          </Grid>\n          {/* Price and Qty Order  */}\n          <Grid item xs={2} alignContent=\"center\">\n            <Typography align=\"right\" color=\"textPrimary\">\n              <NumberFormat\n                value={item.price}\n                displayType={\"text\"}\n                thousandSeparator={true}\n                decimalScale={2}\n                fixedDecimalScale={true}\n                prefix={\"฿\"}\n              />\n              <br />X {item.qty}.\n              <br />\n              <DeleteOutlineIcon\n                onClick={() => dispatch(shopActions.removeOrder(item))}\n              />\n            </Typography>\n          </Grid>\n        </Grid>\n      </ListItem>\n    ));\n  };\n\n  const renderProductRows = () => {\n    const { result } = stockReducer;\n    return (\n      <Container style={{ height: \"100%\", overflowY: \"scroll\" }}>\n        <Grid container spacing={1} className={classes.productContainer}>\n          {result &&\n            result.map(item => {\n              return (\n                <Grid\n                  item\n                  xs={3}\n                  onClick={() => dispatch(shopActions.addOrder(item))}\n                >\n                  <Card>\n                    <CardActionArea>\n                      <CardMedia\n                        component=\"img\"\n                        alt=\"Contemplative Reptile\"\n                        height=\"200\"\n                        image={`${imageUrl}/images/${item.image}`}\n                        title=\"Contemplative Reptile\"\n                      />\n                      <CardContent>\n                        <Typography variant=\"h6\" noWrap>\n                          {item.name}\n                        </Typography>\n\n                        <Grid container>\n                          <Grid item style={{ flexGrow: 1 }}>\n                            <Typography variant=\"body1\" noWrap>\n                              D{item.product_id} / ฿{item.price}\n                            </Typography>\n                          </Grid>\n\n                          {/* Select Indicator Begin */}\n                          {isSelectedItem(item) && (\n                            <Grid item>\n                              <div\n                                style={{\n                                  display: \"flex\",\n                                  flexDirection: \"row\"\n                                }}\n                              >\n                                <Typography\n                                  style={{ marginRight: 4 }}\n                                  variant=\"body1\"\n                                  color=\"textPrimary\"\n                                >\n                                  X{item.qty}\n                                </Typography>\n\n                                <StarsIcon className={classes.star} />\n                              </div>\n                            </Grid>\n                          )}\n\n                          {/* Select Indicator End */}\n                        </Grid>\n                      </CardContent>\n                    </CardActionArea>\n                  </Card>\n                </Grid>\n              );\n            })}\n        </Grid>\n      </Container>\n    );\n  };\n\n  useEffect(() => {\n    dispatch(stockActions.getProducts());\n  }, []);\n\n  return (\n    <div className={classes.root}>\n      <Grid container spacing={1}>\n        {/* Left section */}\n        <Grid item xs={8}>\n          <Paper\n            elevation={1}\n            style={{\n              paddingTop: 24,\n              paddingBottom: 24,\n              backgroundColor: \"#e0f5fd\"\n            }}\n          >\n            {shopReducer.mIsPaymentMade ? renderPayment() : renderProductRows()}\n          </Paper>\n        </Grid>\n\n        {/* Right section */}\n        <Grid item xs={4}>\n          <div\n            style={{\n              maxWidth: \"100%\"\n            }}\n          >\n            <Paper style={{ paddingTop: 16, marginTop: 8 }} elevation={1}>\n              {/* Tax section */}\n              <Grid\n                container\n                justify=\"space-between\"\n                style={{ marginBottom: 24 }}\n              >\n                <Typography variant=\"h4\" className={classes.leftLabel}>\n                  Tax 7%\n                </Typography>\n                <Typography\n                  variant=\"h4\"\n                  color=\"primary\"\n                  className={classes.rightLabel}\n                >\n                  <NumberFormat\n                    value={shopReducer.mTaxAmt}\n                    displayType={\"text\"}\n                    decimalScale={2}\n                    thousandSeparator={true}\n                    prefix={\"฿\"}\n                  />\n                </Typography>\n              </Grid>\n\n              {/* Total section */}\n              <Grid container justify=\"space-between\">\n                <Typography variant=\"h4\" className={classes.leftLabel}>\n                  Total\n                </Typography>\n                <Typography\n                  variant=\"h4\"\n                  color=\"primary\"\n                  className={classes.rightLabel}\n                >\n                  <NumberFormat\n                    value={shopReducer.mTotalPrice}\n                    displayType={\"text\"}\n                    thousandSeparator={true}\n                    decimalScale={2}\n                    fixedDecimalScale={true}\n                    prefix={\"฿\"}\n                  />\n                </Typography>\n              </Grid>\n\n              {shopReducer.mTotalPrice > 0 && !shopReducer.mIsPaymentMade && (\n                <Button\n                  className={classes.paymentButton}\n                  fullWidth\n                  variant=\"contained\"\n                  color=\"secondary\"\n                  onClick={() => dispatch(shopActions.togglePaymentState())}\n                >\n                  <Typography variant=\"h4\">Payment</Typography>\n                </Button>\n              )}\n            </Paper>\n\n            <Paper\n              elevation={1}\n              style={{\n                height: 490,\n                display: \"flex\",\n                flexDirection: \"column\",\n                justifyContent: \"center\",\n                alignItems: \"center\"\n              }}\n            >\n              {shopReducer.mOrderLines.length > 0 ? (\n                <List\n                  component=\"nav\"\n                  className={classes.orderList}\n                  aria-label=\"mailbox folders\"\n                >\n                  {renderOrderRows()}\n                </List>\n              ) : (\n                <img\n                  src={`${process.env.PUBLIC_URL}/images/waiting_for_sale.png`}\n                  style={{ height: 300, width: 300 }}\n                />\n              )}\n            </Paper>\n          </div>\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n","import React from \"react\";\nimport Card from \"@material-ui/core/Card\";\nimport { Typography, Grid } from \"@material-ui/core\";\n\nexport default function StockCard(props) {\n  return (\n    <Card>\n      <Grid container style={{ minHeight: 70 }}>\n        <Grid item style={{ flexGrow: 1, padding: 24 }}>\n          <Typography variant=\"h4\" color=\"textPrimary\">\n            {props.title}\n          </Typography>\n          <Typography variant=\"h5\" color=\"textSecondary\">\n            {props.subtitle}\n          </Typography>\n        </Grid>\n\n        <Grid\n          item\n          style={{\n            backgroundColor: props.color,\n            color: \"white\",\n            display: \"flex\",\n            minWidth: 70,\n            flexDirection: \"column\",\n            justifyContent: \"center\",\n            alignItems: \"center\"\n          }}\n        >\n          {React.createElement(props.icon, { fontSize: \"large\" })}\n        </Grid>\n      </Grid>\n    </Card>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { imageUrl } from \"./../../../constants\";\nimport * as stockActions from \"./../../../actions/stock.action\";\nimport { Link } from \"react-router-dom\";\nimport Moment from \"react-moment\";\nimport NumberFormat from \"react-number-format\";\nimport MaterialTable, { MTableToolbar } from \"material-table\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport { Typography, Grid } from \"@material-ui/core\";\nimport AddShoppingCartIcon from \"@material-ui/icons/AddShoppingCart\";\nimport NewReleasesIcon from \"@material-ui/icons/NewReleases\";\nimport AssignmentReturnIcon from \"@material-ui/icons/AssignmentReturn\";\nimport StarIcon from \"@material-ui/icons/Star\";\nimport StockCard from \"./../../fragments/StockCard/StockCard\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: \"100%\",\n    marginTop: 60\n  }\n}));\n\nexport default props => {\n  const classes = useStyles();\n  const stockReducer = useSelector(({ stockReducer }) => stockReducer);\n  const dispatch = useDispatch();\n\n  const [open, setOpen] = useState(false);\n\n  const [selectedRow, setSelectedRow] = useState(null);\n  const [openDialog, setOpenDialog] = useState(false);\n  const [selectedProduct, setSelectedProduct] = useState(null);\n\n  useEffect(() => {\n    dispatch(stockActions.getProducts());\n  }, []);\n\n  const columns = [\n    {\n      title: \"ID\",\n      field: \"product_id\",\n      render: item => <Typography variant=\"body1\">{item.product_id}</Typography>\n    },\n    {\n      title: \"IMAGE\",\n      field: \"image\",\n      cellStyle: { padding: 0 },\n      render: item => (\n        <img\n          src={`${imageUrl}/images/${item.image}?dummy=${Math.random()}`}\n          style={{ width: 70, height: 70, borderRadius: \"5%\" }}\n        />\n      )\n    },\n    {\n      title: \"NAME\",\n      field: \"name\",\n      cellStyle: { minWidth: 700 },\n      render: item => <Typography variant=\"body1\">{item.name}</Typography>\n    },\n    {\n      title: \"PRICE\",\n      field: \"price\",\n      render: item => (\n        <Typography variant=\"body1\">\n          <NumberFormat\n            value={item.price}\n            displayType={\"text\"}\n            thousandSeparator={true}\n            decimalScale={2}\n            fixedDecimalScale={true}\n            prefix={\"฿\"}\n          />\n        </Typography>\n      )\n    },\n    {\n      title: \"STOCK\",\n      field: \"stock\",\n      render: item => (\n        <Typography variant=\"body1\">\n          <NumberFormat\n            value={item.stock}\n            displayType={\"text\"}\n            thousandSeparator={true}\n            decimalScale={0}\n            fixedDecimalScale={true}\n            suffix={\" pcs\"}\n          />\n        </Typography>\n      )\n    },\n    {\n      title: \"CREATED\",\n      field: \"created\",\n      render: item => (\n        <Typography>\n          <Moment format=\"DD/MM/YYYY\">{item.created}</Moment>\n        </Typography>\n      )\n    }\n  ];\n\n  const actions = [\n    {\n      icon: \"edit\",\n      iconProps: { color: \"primary\" },\n      tooltip: \"Edit\",\n      onClick: (event, rowData) =>\n        props.history.push(\"/stock/edit/\" + rowData.product_id)\n    },\n    {\n      icon: \"delete\",\n      iconProps: { color: \"action\" },\n      tooltip: \"Delete\",\n      onClick: (event, rowData) => {\n        setSelectedProduct(rowData);\n        setOpenDialog(true);\n      }\n    }\n  ];\n\n  const handleDeleteConfirm = () => {\n    dispatch(stockActions.deleteProduct(selectedProduct.product_id));\n    dispatch(stockActions.getProducts());\n    setOpenDialog(false);\n  };\n\n  const handleClose = () => {\n    setOpenDialog(false);\n  };\n\n  const showDialog = () => {\n    if (selectedProduct === null) {\n      return \"\";\n    }\n\n    return (\n      <Dialog\n        open={openDialog}\n        keepMounted\n        onClose={() => {}}\n        aria-labelledby=\"alert-dialog-slide-title\"\n        aria-describedby=\"alert-dialog-slide-description\"\n      >\n        <DialogTitle id=\"alert-dialog-slide-title\">\n          <img\n            src={`${imageUrl}/images/${\n              selectedProduct.image\n            }?dummy=${Math.random()}`}\n            style={{ width: 100, borderRadius: \"5%\" }}\n          />\n          <br />\n          Confirm to delete the product? : {\" \" + selectedProduct.name}\n        </DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-slide-description\">\n            You cannot restore deleted product.\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} color=\"default\">\n            Cancel\n          </Button>\n          <Button onClick={handleDeleteConfirm} color=\"primary\">\n            Delete\n          </Button>\n        </DialogActions>\n      </Dialog>\n    );\n  };\n\n  return (\n    <div className={classes.root}>\n      {/* Summary Icons */}\n      <Grid container style={{ marginBottom: 16 }} spacing={7}>\n        <Grid item lg={3} md={6} xs={12}>\n          <StockCard\n            icon={AddShoppingCartIcon}\n            title=\"TOTAL\"\n            subtitle=\"112 THB\"\n            color=\"#00a65a\"\n          />\n        </Grid>\n\n        <Grid item lg={3} md={6} xs={12}>\n          <StockCard\n            icon={NewReleasesIcon}\n            title=\"EMPTY\"\n            subtitle=\"9 PCS.\"\n            color=\"#f39c12\"\n          />\n        </Grid>\n\n        <Grid item lg={3} md={6} xs={12}>\n          <StockCard\n            icon={AssignmentReturnIcon}\n            title=\"RETURN\"\n            subtitle=\"1 PCS.\"\n            color=\"#dd4b39\"\n          />\n        </Grid>\n\n        <Grid item lg={3} md={6} xs={12}>\n          <StockCard\n            icon={StarIcon}\n            title=\"DISCOUNT\"\n            subtitle=\"5 PCS.\"\n            color=\"#00c0ef\"\n          />\n        </Grid>\n      </Grid>\n\n      <Button variant=\"outlined\" color=\"primary\" onClick={() => setOpen(true)}>\n        Slide in alert dialog\n      </Button>\n      <Dialog\n        open={open}\n        keepMounted\n        aria-labelledby=\"alert-dialog-slide-title\"\n        aria-describedby=\"alert-dialog-slide-description\"\n      >\n        <DialogTitle id=\"alert-dialog-slide-title\">\n          {\"Use Google's location service?\"}\n        </DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-slide-description\">\n            Let Google help apps determine location. This means sending\n            anonymous location data to Google, even when no apps are running.\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\">\n            Disagree\n          </Button>\n          <Button onClick={() => setOpen(false)} color=\"primary\">\n            Agree\n          </Button>\n        </DialogActions>\n      </Dialog>\n\n      <MaterialTable\n        id=\"root_stock\"\n        title=\"Stock\"\n        columns={columns}\n        actions={actions}\n        data={stockReducer.result ? stockReducer.result : []}\n        onRowClick={(evt, selectedRow) => setSelectedRow(selectedRow)}\n        options={{\n          pageSize: 5,\n          rowStyle: rowData => ({\n            backgroundColor:\n              selectedRow && selectedRow.tableData.id === rowData.tableData.id\n                ? \"#EEE\"\n                : \"#FFF\"\n          })\n        }}\n        components={{\n          Toolbar: props => (\n            <div>\n              <MTableToolbar {...props} />\n              <div style={{ padding: \"0px 10px\" }}>\n                <Button\n                  fullWidth\n                  variant=\"contained\"\n                  color=\"primary\"\n                  component={Link}\n                  to=\"/stock/create\"\n                >\n                  Create\n                </Button>\n              </div>\n            </div>\n          )\n        }}\n      />\n      {showDialog()}\n    </div>\n  );\n};\n","import * as stockActions from \"./../../../actions/stock.action\";\n\nimport React from \"react\";\nimport Container from \"@material-ui/core/Container\";\nimport Button from \"@material-ui/core/Button\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useDispatch } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { Formik, Form, Field } from \"formik\";\n\nimport { TextField } from \"formik-material-ui\";\n\nimport Card from \"@material-ui/core/Card\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Typography from \"@material-ui/core/Typography\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: \"80%\",\n    marginTop: 100\n  },\n  field: {\n    marginTop: 16\n  },\n  card: {\n    padding: 20\n  }\n}));\n\nexport default props => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  const showForm = ({ values, setFieldValue, errors }) => {\n    return (\n      <Form>\n        <Card className={classes.card}>\n          <CardContent>\n            <Typography gutterBottom variant=\"h3\">\n              Create Stock\n            </Typography>\n\n            {errors && JSON.stringify(errors)}\n\n            <Field\n              className={classes.field}\n              fullWidth\n              component={TextField}\n              name=\"name\"\n              type=\"text\"\n              label=\"Name\"\n            />\n            <br />\n            <Field\n              className={classes.field}\n              fullWidth\n              component={TextField}\n              name=\"price\"\n              type=\"number\"\n              label=\"Price\"\n            />\n\n            <Field\n              className={classes.field}\n              fullWidth\n              component={TextField}\n              name=\"stock\"\n              type=\"number\"\n              label=\"Stock\"\n            />\n\n            <div>{showPreviewImage(values)}</div>\n\n            <div className={classes.field}>\n              <img\n                src={`${process.env.PUBLIC_URL}/images/ic_photo.png`}\n                style={{ width: 25, height: 20 }}\n              />\n              <span style={{ color: \"#00B0CD\", marginLeft: 10 }}>\n                Add Picture\n              </span>\n              <input\n                type=\"file\"\n                onChange={e => {\n                  e.preventDefault();\n                  setFieldValue(\"file\", e.target.files[0]); // for upload\n                  setFieldValue(\n                    \"file_obj\",\n                    URL.createObjectURL(e.target.files[0])\n                  ); // for preview image\n                }}\n                name=\"image\"\n                click-type=\"type1\"\n                className=\"picupload\"\n                multiple\n                accept=\"image/*\"\n                id=\"files\"\n                style={{ padding: \"20px 0\" }}\n              />\n            </div>\n          </CardContent>\n          <CardActions>\n            <Button variant=\"contained\" color=\"primary\" type=\"submit\">\n              Create\n            </Button>\n            <Button component={Link} to=\"/stock\" color=\"default\" raised>\n              Cancl\n            </Button>\n          </CardActions>\n        </Card>\n      </Form>\n    );\n  };\n\n  const showPreviewImage = values => {\n    if (values.file_obj) {\n      return <img src={values.file_obj} style={{ height: 100 }} />;\n    }\n  };\n\n  return (\n    <Container className={classes.root}>\n      {/* Main content */}\n\n      <div className=\"box-body\" style={{ marginTop: 30 }}>\n        <Formik\n          validate={values => {\n            let errors = {};\n            if (!values.name) errors.name = \"กรุณาใส่ชื่อก่อน\";\n            if (!values.stock) errors.stock = \"Enter stock\";\n            if (!values.price) errors.price = \"Enter price\";\n            return errors;\n          }}\n          initialValues={{ name: \"\", stock: 10, price: 90 }}\n          onSubmit={(values, { setSubmitting }) => {\n            let formData = new FormData();\n            formData.append(\"name\", values.name);\n            formData.append(\"price\", values.price);\n            formData.append(\"stock\", values.stock);\n            formData.append(\"image\", values.file);\n            dispatch(stockActions.addProduct(formData, props.history));\n            setSubmitting(false);\n          }}\n        >\n          {props => showForm(props)}\n        </Formik>\n      </div>\n      {/* /.content */}\n    </Container>\n  );\n};\n","import * as stockActions from \"./../../../actions/stock.action\";\n\nimport React, { useEffect } from \"react\";\nimport Container from \"@material-ui/core/Container\";\nimport Button from \"@material-ui/core/Button\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { Formik, Form, Field } from \"formik\";\n\nimport { TextField } from \"formik-material-ui\";\nimport { imageUrl } from \"./../../../constants\";\n\nimport Card from \"@material-ui/core/Card\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Typography from \"@material-ui/core/Typography\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: \"80%\",\n    marginTop: 100\n  },\n  field: {\n    marginTop: 16\n  },\n  card: {\n    padding: 20\n  }\n}));\n\nexport default props => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const stockReducer = useSelector(({ stockReducer }) => stockReducer);\n\n  useEffect(() => {\n    // Initial code\n    const { id } = props.match.params;\n    dispatch(stockActions.getProductById(id));\n  }, []);\n\n  const showForm = ({ values, setFieldValue, errors }) => {\n    return (\n      <Form>\n        <Card className={classes.card}>\n          <CardContent>\n            <Typography gutterBottom variant=\"h3\">\n              Edit Stock\n            </Typography>\n\n            {errors && JSON.stringify(errors)}\n\n            <Field\n              className={classes.field}\n              fullWidth\n              component={TextField}\n              name=\"name\"\n              type=\"text\"\n              label=\"Name\"\n            />\n            <br />\n            <Field\n              className={classes.field}\n              fullWidth\n              component={TextField}\n              name=\"price\"\n              type=\"number\"\n              label=\"Price\"\n            />\n\n            <Field\n              className={classes.field}\n              fullWidth\n              component={TextField}\n              name=\"stock\"\n              type=\"number\"\n              label=\"Stock\"\n            />\n\n            <div>{showPreviewImage(values)}</div>\n\n            <div className={classes.field}>\n              <img\n                src={`${process.env.PUBLIC_URL}/images/ic_photo.png`}\n                style={{ width: 25, height: 20 }}\n              />\n              <span style={{ color: \"#00B0CD\", marginLeft: 10 }}>\n                Add Picture\n              </span>\n              <input\n                type=\"file\"\n                onChange={e => {\n                  e.preventDefault();\n                  setFieldValue(\"file\", e.target.files[0]); // for upload\n                  setFieldValue(\n                    \"file_obj\",\n                    URL.createObjectURL(e.target.files[0])\n                  ); // for preview image\n                }}\n                name=\"image\"\n                click-type=\"type1\"\n                className=\"picupload\"\n                multiple\n                accept=\"image/*\"\n                id=\"files\"\n                style={{ padding: \"20px 0\" }}\n              />\n            </div>\n          </CardContent>\n          <CardActions>\n            <Button variant=\"contained\" color=\"primary\" type=\"submit\">\n              Edit\n            </Button>\n            <Button component={Link} to=\"/stock\" color=\"default\" raised>\n              Cancl\n            </Button>\n          </CardActions>\n        </Card>\n      </Form>\n    );\n  };\n\n  const showPreviewImage = values => {\n    if (values.file_obj) {\n      return <img src={values.file_obj} style={{ height: 200 }} />;\n    } else if (values.image) {\n      return (\n        <img\n          src={`${imageUrl}/images/${values.image}`}\n          style={{ height: 200 }}\n        />\n      );\n    }\n  };\n\n  return (\n    <Container className={classes.root}>\n      {/* Main content */}\n\n      <div className=\"box-body\" style={{ marginTop: 30 }}>\n        <Formik\n          validate={values => {\n            let errors = {};\n            if (!values.name) errors.name = \"กรุณาใส่ชื่อก่อน\";\n            if (!values.stock || parseInt(values.stock) < 1) errors.stock = \"Enter stock\";\n            if (!values.price) errors.price = \"Enter price\";\n            return errors;\n          }}\n          enableReinitialize\n          initialValues={\n            stockReducer.result\n              ? stockReducer.result\n              : { name: \"\", stock: 0, price: 0 }\n          }\n          onSubmit={(values, { setSubmitting }) => {\n            let formData = new FormData();\n            formData.append(\"product_id\", values.product_id);\n            formData.append(\"name\", values.name);\n            formData.append(\"price\", values.price);\n            formData.append(\"stock\", values.stock);\n            if (values.file) {\n              formData.append(\"image\", values.file);\n            }\n            dispatch(stockActions.updateProduct(formData, props.history));\n            setSubmitting(false);\n          }}\n        >\n          {props => showForm(props)}\n        </Formik>\n      </div>\n      {/* /.content */}\n    </Container>\n  );\n};\n","import React, { useEffect, useState } from \"react\";\nimport { Line, Bar, Pie } from \"react-chartjs-2\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { Button, ButtonGroup, IconButton } from \"@material-ui/core\";\nimport RefreshIcon from \"@material-ui/icons/Refresh\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: \"100%\",\n    marginTop: 100,\n    backgroundColor: \"white\",\n    padding: 24\n  }\n}));\n\nexport default () => {\n  const classes = useStyles();\n  const [chartType, setChartType] = useState(\"bar\");\n  const [chartData, setChartData] = useState([]);\n\n  const getRandomInt = () => {\n    let randoms = [];\n    for (let index = 0; index < 8; index++) {\n      randoms.push(Math.floor(Math.random() * (50000 - 5 + 1)) + 5);\n    }\n    return randoms;\n  };\n\n  const data = {\n    labels: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\"],\n    datasets: [\n      {\n        label: \"Revenue 2018\",\n        fill: true,\n        lineTension: 0.1,\n        backgroundColor: [\n          \"rgba(255, 99, 132, 0.2)\",\n          \"rgba(54, 162, 235, 0.2)\",\n          \"rgba(255, 206, 86, 0.2)\",\n          \"rgba(75, 192, 192, 0.2)\",\n          \"rgba(153, 102, 255, 0.2)\",\n          \"rgba(255, 159, 64, 0.2)\",\n          \"rgba(255, 99, 132, 0.2)\"\n        ],\n        borderColor: \"rgba(75,192,192,1)\",\n        borderCapStyle: \"butt\",\n        borderDash: [],\n        borderDashOffset: 0.0,\n        borderJoinStyle: \"miter\",\n        pointBorderColor: \"rgba(75,192,192,1)\",\n        pointBackgroundColor: \"#fff\",\n        pointBorderWidth: 1,\n        pointHoverRadius: 5,\n        pointHoverBackgroundColor: \"rgba(75,192,192,1)\",\n        pointHoverBorderColor: \"rgba(220,220,220,1)\",\n        pointHoverBorderWidth: 2,\n        pointRadius: 1,\n        pointHitRadius: 10,\n        data: chartData\n      }\n    ]\n  };\n\n  const chartOption = {\n    maintainAspectRatio: false,\n    scales: {\n      yAxes: [\n        {\n          ticks: {\n            beginAtZero: true,\n            callback: function(value, index, values) {\n              return value.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n            }\n          }\n        }\n      ]\n    }\n  };\n\n  useEffect(() => {\n    setChartData(getRandomInt());\n  }, []);\n\n  return (\n    <div className={classes.root}>\n      <Typography variant=\"h1\">Sale Chart</Typography>\n      <ButtonGroup\n        size=\"large\"\n        color=\"primary\"\n        aria-label=\"large outlined primary button group\"\n      >\n        <Button\n          variant={chartType === \"line\" ? \"contained\" : \"outlined\"}\n          onClick={() => setChartType(\"line\")}\n        >\n          Line\n        </Button>\n        <Button\n          variant={chartType === \"bar\" ? \"contained\" : \"outlined\"}\n          onClick={() => setChartType(\"bar\")}\n        >\n          Bar\n        </Button>\n        <Button\n          variant={chartType === \"pie\" ? \"contained\" : \"outlined\"}\n          onClick={() => setChartType(\"pie\")}\n        >\n          Pie\n        </Button>\n      </ButtonGroup>\n      <IconButton\n        aria-label=\"refresh\"\n        onClick={() => {\n          setChartData(getRandomInt());\n        }}\n      >\n        <RefreshIcon />\n      </IconButton>\n      <div style={{ height: 500 }}>\n        {chartType === \"line\" && (\n          <Line data={data} width=\"100%\" height={50} options={chartOption} />\n        )}\n        {chartType === \"pie\" && (\n          <Pie data={data} width=\"100%\" height={50} options={chartOption} />\n        )}\n        {chartType === \"bar\" && (\n          <Bar data={data} width=\"100%\" height={50} options={chartOption} />\n        )}\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\n\nconst TransactionPage = () => {\n  return <div>TransactionPage</div>;\n};\n\nexport default TransactionPage;\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport List from \"@material-ui/core/List\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Divider from \"@material-ui/core/Divider\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport InboxIcon from \"@material-ui/icons/MoveToInbox\";\nimport MailIcon from \"@material-ui/icons/Mail\";\nimport Header from \"./components/layouts/Header\";\nimport Menu from \"./components/layouts/Menu\";\nimport LoginPage from \"./components/pages/LoginPage/LoginPage\";\nimport RegisterPage from \"./components/pages/RegisterPage/RegisterPage\";\nimport ShopPage from \"./components/pages/ShopPage/ShopPage\";\nimport StockPage from \"./components/pages/StockPage/StockPage\";\nimport StockCreatePage from \"./components/pages/StockCreatePage/StockCreatePage\";\nimport StockEditPage from \"./components/pages/StockEditPage/StockEditPage\";\nimport ReportPage from \"./components/pages/ReportPage/ReportPage\";\nimport TransactionPage from \"./components/pages/TransactionPage/TransactionPage\";\nimport { createMuiTheme, ThemeProvider } from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\nimport * as loginActions from \"./actions/login.action\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport {\n  BrowserRouter as Router,\n  Route,\n  Redirect,\n  Switch\n} from \"react-router-dom\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: \"flex\"\n  },\n  toolbar: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"flex-end\",\n    padding: theme.spacing(0, 1),\n    ...theme.mixins.toolbar\n  },\n  content: {\n    flexGrow: 1,\n    display: \"flex\",\n    justifyContent: \"center\",\n    padding: theme.spacing(3)\n  }\n}));\n\nexport default function App() {\n  const classes = useStyles();\n  useSelector(({ loginReducer }) => loginReducer);\n  const [drawerOpen, setDrawerOpen] = React.useState(true);\n\n  const theme = createMuiTheme({\n    palette: {\n      500: process.env.REACT_APP_IS_PRODUCTION === \"1\" ? \"#1E88E5\" : \"#000000\"\n    },\n    status: {\n      danger: \"orange\"\n    }\n  });\n\n  // Protected Route\n  const SecuredRoute = ({ component: Component, ...rest }) => (\n    <Route\n      {...rest}\n      render={props =>\n        // ternary condition\n        loginActions.isLoggedIn() ? (\n          <Component {...props} />\n        ) : (\n          <Redirect to=\"/login\" />\n        )\n      }\n    />\n  );\n\n  const LoginRoute = ({ component: Component, ...rest }) => (\n    <Route\n      {...rest}\n      render={props =>\n        // ternary condition\n        loginActions.isLoggedIn() ? (\n          <Redirect to=\"/stock\" />\n        ) : (\n          <LoginPage {...props} />\n        )\n      }\n    />\n  );\n\n  return (\n    <Router\n      basename={process.env.REACT_APP_IS_PRODUCTION === \"1\" ? \"/demo\" : \"\"}\n    >\n      <Switch>\n        <ThemeProvider theme={theme}>\n          <div className={classes.root}>\n            {loginActions.isLoggedIn() && (\n              <Header\n                handleDrawerOpen={() => {\n                  setDrawerOpen(!drawerOpen);\n                }}\n              />\n            )}\n            {loginActions.isLoggedIn() && <Menu open={drawerOpen} />}\n            <Container className={classes.content} maxWidth={false}>\n              <div className={classes.toolbar} />\n              <LoginRoute path=\"/login\" component={LoginPage} />\n              <Route path=\"/register\" component={RegisterPage} />\n              <SecuredRoute path=\"/shop\" component={ShopPage} />\n              <SecuredRoute exact={true} path=\"/stock\" component={StockPage} />\n              <SecuredRoute path=\"/stock/create\" component={StockCreatePage} />\n              <SecuredRoute path=\"/stock/edit/:id\" component={StockEditPage} />\n              <SecuredRoute path=\"/report\" component={ReportPage} />\n              <SecuredRoute path=\"/transaction\" component={TransactionPage} />\n\n              <Route\n                exact={true}\n                path=\"/\"\n                component={() => <Redirect to=\"/login\" />}\n              />\n            </Container>\n          </div>\n        </ThemeProvider>\n      </Switch>\n    </Router>\n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {\n  LOGIN_FETCHING,\n  LOGIN_FAILED,\n  LOGIN_SUCCESS,\n  LOGOUT\n} from \"../constants\";\n\nconst initialState = {\n  isFetching: false,\n  isError: false,\n  result: null\n};\n\nexport default (state = initialState, { type, payload }) => {\n  switch (type) {\n    case LOGIN_FETCHING:\n      return { ...state, isFetching: true, isError: false, result: null };\n    case LOGIN_FAILED:\n      return { ...state, isFetching: false, isError: true, result: null };\n    case LOGIN_SUCCESS:\n      return { ...state, isFetching: false, isError: false, result: payload };\n    case LOGOUT:\n      return { ...state, result: \"\", isFetching: false, isError: false };\n\n    default:\n      return state;\n  }\n};\n","import {\n  REGISTER_FETCHING,\n  REGISTER_FAILED,\n  REGISTER_SUCCESS\n} from \"../constants\";\n\nconst initialState = {\n  isFetching: false,\n  isError: false,\n  result: null\n};\n\nexport default (state = initialState, { type, payload }) => {\n  switch (type) {\n    case REGISTER_FETCHING:\n      return { ...state, isFetching: true, isError: false, result: null };\n    case REGISTER_FAILED:\n      return { ...state, isFetching: false, isError: true, result: null };\n    case REGISTER_SUCCESS:\n      return { ...state, isFetching: false, isError: false, result: payload };\n    default:\n      return state;\n  }\n};\n","import {\n  STOCK_SUCCESS,\n  STOCK_FETCHING,\n  STOCK_FAILED,\n  STOCK_CLEAR\n} from \"../constants\";\n\nconst initialState = {\n  result: null,\n  isFetching: false,\n  isError: false\n};\n\nexport default (state = initialState, { type, payload }) => {\n  switch (type) {\n    case STOCK_FETCHING:\n      return { ...state, result: null, isFetching: true, isError: false };\n    case STOCK_SUCCESS:\n      return { ...state, result: payload, isFetching: false, isError: false };\n    case STOCK_FAILED:\n      return { ...state, result: null, isFetching: false, isError: true };\n    case STOCK_CLEAR:\n      return { ...state, result: null, isFetching: false, isError: false };\n    default:\n      return state;\n  }\n};\n","import { SHOP_UPDATE_ORDER, SHOP_UPDATE_PAYMENT } from \"../constants\";\n\nconst initialState = {\n  mOrderLines: [],\n  mTotalPrice: 0,\n  mTaxAmt: 0,\n  mIsPaymentMade: false,\n  mGiven: 0\n};\n\nexport default (state = initialState, { type, payload }) => {\n  switch (type) {\n    case SHOP_UPDATE_ORDER:\n      return {\n        ...state,\n        mOrderLines: payload.orderLines,\n        mTotalPrice: payload.totalPrice,\n        mTaxAmt: payload.taxAmt\n      };\n    case SHOP_UPDATE_PAYMENT:\n      return {\n        ...state,\n        mIsPaymentMade: payload.isPaymentMade,\n        mGiven: payload.given\n      };\n    default:\n      return state;\n  }\n};\n","import {\n  TRANSACTION_SUCCESS,\n  TRANSACTION_FETCHING,\n  TRANSACTION_FAILED\n} from \"./../constants\";\n\nconst initialState = {\n  result: null,\n  isFetching: false,\n  isError: false\n};\n\nexport default (state = initialState, { type, payload }) => {\n  switch (type) {\n    case TRANSACTION_SUCCESS:\n      return { ...state, result: payload, isFetching: false, isError: false };\n    case TRANSACTION_FAILED:\n      return { ...state, result: null, isFetching: false, isError: true };\n    case TRANSACTION_FETCHING:\n      return { ...state, result: null, isFetching: true, isError: false };\n    default:\n      return state;\n  }\n};\n","import { combineReducers } from \"redux\";\nimport loginReducer from './login.reducer';\nimport registerReducer from './register.reducer';\nimport stockReducer from './stock.reducer';\nimport shopReducer from './shop.reducer';\nimport transactionReducer from './transaction.reducer';\nexport default combineReducers({\n    loginReducer,\n    registerReducer,\n    stockReducer,\n    shopReducer,\n    transactionReducer\n})","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nimport { createStore, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { Provider } from \"react-redux\";\nimport reducers from \"./reducers\";\nimport logger from \"redux-logger\";\n\nconst middlewares = applyMiddleware(thunk, logger);\nconst store = createStore(reducers, middlewares);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}